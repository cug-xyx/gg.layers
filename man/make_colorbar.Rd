% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorbar_.R, R/colorbar_triangle.R, R/lattice.R
\name{make_colorbar}
\alias{make_colorbar}
\alias{colorkey_pos}
\alias{draw.colorkey2}
\title{make_colorbar}
\usage{
make_colorbar(
  at,
  col = .regions$col,
  alpha = .regions$alpha,
  labels = NULL,
  lab = NULL,
  labeller = format,
  pretty = FALSE,
  equispaced = TRUE,
  tick.number = 7,
  tck = 0.2,
  tck.padding = 0,
  width = 2,
  height = 1,
  space = "right",
  raster = FALSE,
  interpolate = FALSE,
  tri.upper = NA,
  tri.lower = NA,
  title = NULL,
  cex.title = 1,
  axis.line = trellis.par.get("axis.line"),
  padding.left = unit(0, "points"),
  padding.right = unit(0, "points"),
  legend.text = trellis.par.get("axis.text"),
  legend.text.location = c(0.5, 0.5),
  legend.text.just = NULL,
  legend.margin = bb_margin(),
  theme = NULL,
  theme.default = theme_get(),
  rect = list(col = "black", lwd = 0.3),
  hjust = 0,
  vjust = 0.5,
  ...,
  draw = FALSE,
  vp = NULL
)

colorkey_pos(space = "right")

draw.colorkey2(key, draw = FALSE, vp = NULL)
}
\arguments{
\item{space}{One of \code{c('top', 'bottom', 'right', 'left')}}

\item{title}{all title elements: plot, axes, legends (\code{\link[ggplot2:element]{element_text()}};
inherits from \code{text})}

\item{axis.line}{lines along axes (\code{\link[ggplot2:element]{element_line()}}). Specify lines along all axes (\code{axis.line}),
lines for each plane (using \code{axis.line.x} or \code{axis.line.y}), or individually
for each axis (using \code{axis.line.x.bottom}, \code{axis.line.x.top},
\code{axis.line.y.left}, \code{axis.line.y.right}). \verb{axis.line.*.*} inherits from
\verb{axis.line.*} which inherits from \code{axis.line}, which in turn inherits
from \code{line}}

\item{padding.left, padding.right}{padding in the left and right of the legend}

\item{legend.text}{\itemize{
\item \code{cex}:
\item \code{col}:
\item \code{font}:
\item \code{fontfamily}: The font family
\item \code{fontface}: The font face (bold, italic, ...)
\item \code{lineheight}:
}}

\item{legend.text.just}{The justification of the text relative to its (x, y)
location. If there are two values, the first value specifies horizontal
justification and the second value specifies vertical justification. Possible
string values are: "left", "right", "centre", "center", "bottom", and "top".
For numeric values, 0 means left (bottom) alignment and 1 means right (top)
alignment.}

\item{legend.margin}{the margin around each legend (\code{\link[ggplot2:element]{margin()}})}

\item{rect}{all rectangular elements (\code{\link[ggplot2:element]{element_rect()}})}

\item{hjust}{A numeric vector specifying horizontal justification.
    If specified, overrides the \code{just} setting.}

\item{vjust}{A numeric vector specifying vertical justification.
    If specified, overrides the \code{just} setting.}

\item{...}{additional element specifications not part of base ggplot2. In general,
these should also be defined in the \verb{element tree} argument.}

\item{draw}{A logical value indicating whether graphics output
    should be produced.}

\item{vp}{A Grid viewport object (or NULL).}
}
\description{
make_colorbar
}
\examples{
library(rcolors)
library(ggplot2)

brks = c(-Inf, -1, 0, 1, 3, 6, 9, Inf)
nbrk = length(brks) - 1
cols = get_color(rcolors$amwg256, nbrk)

g <- make_colorbar(
    at = brks, col = cols, height = 1,
    tck = 0.4,
    padding.left = unit(10, "points"),
    padding.right = unit(0, "points"),
    space = "right",
    legend.text.location = c(0.3, 0.5),
    legend.text.just = c(0.5, 0.5),
    # legend.text = list(fontfamily = "Times", cex = 1.1),
    hjust = 0.5
)

Ipaper::write_fig({
    grid.rect()
    grid.draw(g)
}, "a.pdf", 0.7, 4)

##
p <- ggplot(mtcars, aes(mpg, disp)) + geom_point()
p + g

theme_set(theme_grey())

theme = theme_grey()
calc_element("legend.text", theme)

# p2 = add_colorbar(p, g, width = 1)
# write_fig(p2, "a.pdf", 7, 4)
}
