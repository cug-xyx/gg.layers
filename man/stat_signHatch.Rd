% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_signHatch.R
\name{stat_signHatch}
\alias{stat_signHatch}
\alias{geom_signHatch}
\title{geom_signHatch}
\usage{
stat_signHatch(
  mapping = NULL,
  data = NULL,
  geom = "sf",
  position = "identity",
  show.legend = NA,
  inherit.aes = TRUE,
  ...,
  density = 1,
  angle = 45
)

geom_signHatch(
  mapping = aes(),
  data = NULL,
  stat = "signHatch",
  position = "identity",
  show.legend = NA,
  inherit.aes = TRUE,
  ...,
  density = 1,
  angle = 45
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{geom}{The geometric object to use display the data}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.

You can also set this to one of "polygon", "line", and "point" to
override the default legend.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{density}{the density of shading lines, in lines per inch. The default
value of NULL means that no shading lines are drawn. A zero value of density
means no shading nor filling whereas negative values and NA suppress shading
(and so allow color filling).}

\item{angle}{the slope of shading lines, given as an angle
     in degrees (counter-clockwise).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}
}
\description{
geom_signHatch
}
\section{Aesthetics}{

\code{\link[=geom_signHatch]{geom_signHatch()}} requires the following aesthetics:
\itemize{
\item \code{x}:
\item \code{y}:
\item \code{mask}:
}
}

\examples{
library(gg.layers)
library(ggplot2)
data("d_trendPerc")

d_mask <- mutate(d_trendPerc, mask = perc <= 0.99) #\%>\% as.data.frame()

ggplot() +
    geom_raster(data = d_trendPerc, aes(x, y, fill = perc)) +
    # geom_sf(data = shp) +
    geom_signHatch(data = d_mask, aes(x, y, mask = mask), color = "red")
}
